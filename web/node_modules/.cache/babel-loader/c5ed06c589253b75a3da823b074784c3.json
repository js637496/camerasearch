{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { Observable } from 'apollo-link';\n\nvar OperationQueuing = function () {\n  function OperationQueuing() {\n    this.queuedRequests = [];\n    this.subscriptions = {};\n    this.queuedRequests = [];\n  }\n\n  OperationQueuing.prototype.enqueueRequest = function (request) {\n    var _this = this;\n\n    var requestCopy = __assign({}, request);\n\n    requestCopy.observable = requestCopy.observable || new Observable(function (observer) {\n      _this.queuedRequests.push(requestCopy);\n\n      if (typeof requestCopy.subscriber === 'undefined') {\n        requestCopy.subscriber = {};\n      }\n\n      requestCopy.subscriber.next = requestCopy.next || observer.next.bind(observer);\n      requestCopy.subscriber.error = requestCopy.error || observer.error.bind(observer);\n      requestCopy.subscriber.complete = requestCopy.complete || observer.complete.bind(observer);\n    });\n    return requestCopy.observable;\n  };\n\n  OperationQueuing.prototype.consumeQueue = function () {\n    var _this = this;\n\n    this.queuedRequests.forEach(function (request) {\n      var key = request.operation.toKey();\n      _this.subscriptions[key] = request.forward(request.operation).subscribe(request.subscriber);\n      return function () {\n        _this.subscriptions[key].unsubscribe();\n      };\n    });\n    this.queuedRequests = [];\n  };\n\n  return OperationQueuing;\n}();\n\nexport { OperationQueuing };","map":null,"metadata":{},"sourceType":"module"}